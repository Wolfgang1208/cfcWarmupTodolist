{"ast":null,"code":"var _jsxFileName = \"/home/wolfgang/Desktop/todo/src/pages/Todo.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tasks = [];\nconst Todo = () => {\n  _s();\n  var _Object$entries;\n  const [err, setErr] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [date, setDate] = useState(0);\n  const handleUpdate = async () => {\n    try {\n      console.log(text);\n      console.log(date);\n      console.log(text.length);\n      console.log(date.length);\n      if (text.length > 0 && date.length > 0) {\n        console.log(\"Here1\");\n        let task = {\n          \"name\": text,\n          \"date\": date\n        };\n        console.log(\"Here2\");\n        tasks.push(task);\n        console.log(\"Here3\");\n        console.log(task);\n        console.log(tasks);\n      } else {\n        throw new Error(\"Error!\");\n      }\n    } catch (err) {\n      setErr(true);\n    }\n    setDate(0);\n    setText(\"\");\n  };\n  const handleComplete = async _ref => {\n    let {\n      name\n    } = _ref;\n    tasks.splice($.inArray(name, tasks), 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Help Kratos train Atreus to prepare for Ragnar\\xF6k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        placeholder: \"Type Atreus\\u2018 tasks here...\",\n        onChange: e => setText(e.target.value),\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"\",\n        id: \"\",\n        onChange: e => setDate(e.target.value),\n        value: date,\n        min: \"0\",\n        oninput: \"validity.valid||(value='');\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"write it down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"M\\xEDmir: You have to put correct text and date, brother...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: (_Object$entries = Object.entries(tasks)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.sort((a, b) => a[1].date - b[1].date).map(tasks => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskcontent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tasks[1].name, \" \", tasks[1].date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleComplete(tasks[1].name),\n          children: \"completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"hCW3zXzFnR59Oo1z8eMKem9wl44=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","tasks","Todo","err","setErr","text","setText","date","setDate","handleUpdate","console","log","length","task","push","Error","handleComplete","name","splice","$","inArray","e","target","value","Object","entries","sort","a","b","map"],"sources":["/home/wolfgang/Desktop/todo/src/pages/Todo.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nvar tasks = []\n\nconst Todo = () => {\n  const [err, setErr] = useState(false);\n  const [text, setText] = useState(\"\")\n  const [date, setDate] = useState(0)\n\n\n  const handleUpdate = async () => {\n    try {\n      console.log(text)\n      console.log(date)\n      console.log(text.length)\n      console.log(date.length)\n      if (text.length > 0 && date.length > 0) {\n        console.log(\"Here1\")\n        let task = {\n          \"name\": text,\n          \"date\": date\n        }\n        console.log(\"Here2\")\n        tasks.push(task)\n        console.log(\"Here3\")\n        console.log(task)\n        console.log(tasks)\n      } else {\n        throw new Error(\"Error!\")\n      }\n    } catch (err) {\n      setErr(true);\n    }\n    setDate(0)\n    setText(\"\")\n  }\n\n\n  const handleComplete = async ({name}) => {\n    tasks.splice($.inArray(name,tasks),1);\n  }\n\n\n  return (\n    <div className='todo'>\n      <h1>Help Kratos train Atreus to prepare for Ragnarök</h1>\n      <div className='events'>\n        <input type=\"text\" name=\"\" id=\"\" placeholder='Type Atreus‘ tasks here...' onChange={e => setText(e.target.value)} value={text} />\n        <input type=\"number\" name=\"\" id=\"\" onChange={e => setDate(e.target.value)} value={date} min=\"0\" oninput=\"validity.valid||(value='');\" />\n        <button onClick={handleUpdate}>write it down</button>\n        {err && <span>Mímir: You have to put correct text and date, brother...</span>}\n      </div>\n      <div className='tasks'>\n        {Object.entries(tasks)?.sort((a, b) => a[1].date - b[1].date).map((tasks) => (\n          <div className=\"taskcontent\" >\n            <p>{tasks[1].name} {tasks[1].date}</p>\n            <button onClick={handleComplete(tasks[1].name)}>completed</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Todo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}